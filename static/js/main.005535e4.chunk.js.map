{"version":3,"sources":["actions/index.js","containers/search_bar.js","components/chart.js","containers/weather_list.js","components/app.js","reducers/index.js","reducers/reducer_weather.js","index.js"],"names":["ROOT_URL","concat","FETCH_WEATHER","fetchWeather","city","url","request","axios","get","type","payload","SearchBar","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","term","onInputChange","bind","assertThisInitialized","onFormSubmit","event","setState","target","value","preventDefault","react_default","a","createElement","className","onSubmit","placeholder","onChange","Component","connect","dispatch","bindActionCreators","chart","build","height","width","data","color","_","round","sum","length","units","WeatherList","cityData","name","temps","map","list","weather","main","temp","pressures","pressure","humidities","humidity","_cityData$city$coord","coord","lon","lat","key","renderWeather","_ref","App","search_bar","weather_list","rootReducer","combineReducers","arguments","undefined","action","toConsumableArray","createStoreWithMiddleware","applyMiddleware","ReduxPromise","createStore","ReactDOM","render","es","store","reducers","app_App","document","querySelector"],"mappings":"yRAGMA,EAAQ,yDAAAC,OADE,oCAEHC,EAAgB,gBAEtB,SAASC,EAAaC,GAC5B,IAAMC,EAAG,GAAAJ,OAAMD,EAAN,OAAAC,OAAoBG,EAApB,OACHE,EAAUC,IAAMC,IAAIH,GAC1B,MAAO,CACNI,KAAMP,EACNQ,QAASJ,OCPLK,cACL,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IAClBE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KACDQ,MAAQ,CACZC,KAAM,IAEPR,EAAKS,cAAgBT,EAAKS,cAAcC,KAAnBT,OAAAU,EAAA,EAAAV,QAAAU,EAAA,EAAAV,CAAAD,KACrBA,EAAKY,aAAeZ,EAAKY,aAAaF,KAAlBT,OAAAU,EAAA,EAAAV,QAAAU,EAAA,EAAAV,CAAAD,KANFA,6EAQLa,GACbV,KAAKW,SAAS,CAAEN,KAAMK,EAAME,OAAOC,6CAEvBH,GACZA,EAAMI,iBACNd,KAAKJ,MAAMT,aAAaa,KAAKI,MAAMC,MACnCL,KAAKW,SAAS,CAAEN,KAAM,sCAItB,OACCU,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACdH,EAAAC,EAAAC,cAAA,6BACAF,EAAAC,EAAAC,cAAA,QAAMC,UAAS,cAAiBC,SAAUnB,KAAKS,cAC9CM,EAAAC,EAAAC,cAAA,SACCC,UAAS,eACTE,YAAW,kDACXP,MAAOb,KAAKI,MAAMC,KAClBgB,SAAUrB,KAAKM,gBAEhBS,EAAAC,EAAAC,cAAA,QAAMC,UAAS,mBACdH,EAAAC,EAAAC,cAAA,UAAQxB,KAAI,SAAYyB,UAAS,qBAAjC,oBA9BkBI,aA4CTC,kBAAQ,KAJvB,SAA4BC,GAC3B,OAAOC,YAAmB,CAAEtC,gBAAgBqC,IAG9BD,CAAkC5B,4BCxCjD,IAAA+B,EAAA,SAAe9B,GACd,OACCmB,EAAAC,EAAAC,cAAA,WACCF,EAAAC,EAAAC,cAACU,EAAA,WAAD,CAAYC,OAAQ,IAAKC,MAAO,IAAKC,KAAMlC,EAAMkC,MAChDf,EAAAC,EAAAC,cAACU,EAAA,eAAD,CAAgBI,MAAOnC,EAAMmC,QAC7BhB,EAAAC,EAAAC,cAACU,EAAA,wBAAD,CAAyBlC,KAAI,SAE9BsB,EAAAC,EAAAC,cAAA,YAXca,EAYJlC,EAAMkC,KAXXE,IAAEC,MAAMD,IAAEE,IAAIJ,GAAQA,EAAKK,SAUhC,IACwBvC,EAAMwC,QAZjC,IAAiBN,GCCXO,wLACSC,GACb,IAAMC,EAAOD,EAASlD,KAAKmD,KACrBC,EAAQR,IAAES,IAAIH,EAASI,KAAKD,IAAI,SAAAE,GAAO,OAAIA,EAAQC,KAAKC,OAAO,SAAAA,GAAI,OAAIA,EAAO,MAC9EC,EAAYR,EAASI,KAAKD,IAAI,SAAAE,GAAO,OAAIA,EAAQC,KAAKG,WACtDC,EAAaV,EAASI,KAAKD,IAAI,SAAAE,GAAO,OAAIA,EAAQC,KAAKK,WAJtCC,EAKFZ,EAASlD,KAAK+D,MALZD,EAKfE,IALeF,EAKVG,IACb,OACCtC,EAAAC,EAAAC,cAAA,MAAIqC,IAAKf,GACRxB,EAAAC,EAAAC,cAAA,UACEsB,GAEFxB,EAAAC,EAAAC,cAAA,UACCF,EAAAC,EAAAC,cAACS,EAAD,CAAOI,KAAMU,EAAOT,MAAO,SAAUK,MAAK,WAE3CrB,EAAAC,EAAAC,cAAA,UACCF,EAAAC,EAAAC,cAACS,EAAD,CAAOI,KAAMgB,EAAWf,MAAO,QAASK,MAAK,SAE9CrB,EAAAC,EAAAC,cAAA,UACCF,EAAAC,EAAAC,cAACS,EAAD,CAAOI,KAAMkB,EAAYjB,MAAO,QAASK,MAAK,yCAMjD,OACCrB,EAAAC,EAAAC,cAAA,SAAOC,UAAS,qBACfH,EAAAC,EAAAC,cAAA,aACCF,EAAAC,EAAAC,cAAA,UACCF,EAAAC,EAAAC,cAAA,kBACAF,EAAAC,EAAAC,cAAA,iCACAF,EAAAC,EAAAC,cAAA,4BACAF,EAAAC,EAAAC,cAAA,4BAGFF,EAAAC,EAAAC,cAAA,aAAQjB,KAAKJ,MAAM+C,QAAQF,IAAIzC,KAAKuD,wBAnCdjC,aAiDXC,kBAJf,SAAAiC,GACC,MAAO,CAAEb,QAD4Ba,EAAXb,UAIZpB,CAAyBc,GCnDnBoB,mLAEnB,OACC1C,EAAAC,EAAAC,cAAA,WACCF,EAAAC,EAAAC,cAACyC,EAAD,MACA3C,EAAAC,EAAAC,cAAC0C,EAAD,cAL6BrC,qBCGlBsC,EAJKC,YAAgB,CACnClB,QCAc,WAA6B,IAApBvC,EAAoB0D,UAAA3B,OAAA,QAAA4B,IAAAD,UAAA,GAAAA,UAAA,GAAZ,GAAIE,EAAQF,UAAA3B,OAAA,EAAA2B,UAAA,QAAAC,EAC3C,OAAQC,EAAOvE,MACd,KAAKP,EACJ,OAAQ8E,EAAOtE,QAAQoC,MAAvB7C,OAAAa,OAAAmE,EAAA,EAAAnE,CAAgCM,IAElC,OAAOA,KCGF8D,SAA4BC,YAAgBC,IAAhBD,CAA8BE,MAEhEC,IAASC,OACRxD,EAAAC,EAAAC,cAACuD,EAAA,EAAD,CAAUC,MAAOP,EAA0BQ,IAC1C3D,EAAAC,EAAAC,cAAC0D,EAAD,OAEDC,SAASC,cAAc","file":"static/js/main.005535e4.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nconst API_KEY = '45b52714817a2a57145a20af5407037e';\r\nconst ROOT_URL = `http://api.openweathermap.org/data/2.5/forecast?appid=${API_KEY}`;\r\nexport const FETCH_WEATHER = 'FETCH_WEATHER';\r\n\r\nexport function fetchWeather(city) {\r\n\tconst url = `${ROOT_URL}&q=${city},in`;\r\n\tconst request = axios.get(url);\r\n\treturn {\r\n\t\ttype: FETCH_WEATHER,\r\n\t\tpayload: request\r\n\t};\r\n}\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\nimport { fetchWeather } from '../actions/index';\r\nclass SearchBar extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tterm: ''\r\n\t\t};\r\n\t\tthis.onInputChange = this.onInputChange.bind(this);\r\n\t\tthis.onFormSubmit = this.onFormSubmit.bind(this);\r\n\t}\r\n\tonInputChange(event) {\r\n\t\tthis.setState({ term: event.target.value });\r\n\t}\r\n\tonFormSubmit(event) {\r\n\t\tevent.preventDefault();\r\n\t\tthis.props.fetchWeather(this.state.term);\r\n\t\tthis.setState({ term: '' });\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className=\"header\">\r\n\t\t\t\t<h1>Weather Station</h1>\r\n\t\t\t\t<form className={`input-group`} onSubmit={this.onFormSubmit}>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\tclassName={`form-control`}\r\n\t\t\t\t\t\tplaceholder={`Get a five-day forecast in your favorite cities`}\r\n\t\t\t\t\t\tvalue={this.state.term}\r\n\t\t\t\t\t\tonChange={this.onInputChange}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<span className={`input-group-btn`}>\r\n\t\t\t\t\t\t<button type={`submit`} className={`btn btn-secondary`}>\r\n\t\t\t\t\t\t\tSearch\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t</span>\r\n\t\t\t\t</form>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n\treturn bindActionCreators({ fetchWeather }, dispatch);\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(SearchBar);\r\n","import React from 'react';\r\nimport { Sparklines, SparklinesLine, SparklinesReferenceLine } from 'react-sparklines';\r\nimport _ from 'lodash';\r\n\r\nfunction average(data) {\r\n\treturn _.round(_.sum(data) / data.length);\r\n}\r\n\r\nexport default props => {\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<Sparklines height={120} width={180} data={props.data}>\r\n\t\t\t\t<SparklinesLine color={props.color} />\r\n\t\t\t\t<SparklinesReferenceLine type={`avg`} />\r\n\t\t\t</Sparklines>\r\n\t\t\t<div>\r\n\t\t\t\t{average(props.data)} {props.units}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport _ from 'lodash';\r\nimport Chart from '../components/chart';\r\n\r\nclass WeatherList extends Component {\r\n\trenderWeather(cityData) {\r\n\t\tconst name = cityData.city.name;\r\n\t\tconst temps = _.map(cityData.list.map(weather => weather.main.temp), temp => temp - 273);\r\n\t\tconst pressures = cityData.list.map(weather => weather.main.pressure);\r\n\t\tconst humidities = cityData.list.map(weather => weather.main.humidity);\r\n\t\tconst { lon, lat } = cityData.city.coord;\r\n\t\treturn (\r\n\t\t\t<tr key={name}>\r\n\t\t\t\t<td>\r\n\t\t\t\t\t{name}\r\n\t\t\t\t</td>\r\n\t\t\t\t<td>\r\n\t\t\t\t\t<Chart data={temps} color={'orange'} units={`°C`} />\r\n\t\t\t\t</td>\r\n\t\t\t\t<td>\r\n\t\t\t\t\t<Chart data={pressures} color={'green'} units={`hPa`} />\r\n\t\t\t\t</td>\r\n\t\t\t\t<td>\r\n\t\t\t\t\t<Chart data={humidities} color={'black'} units={`%`} />\r\n\t\t\t\t</td>\r\n\t\t\t</tr>\r\n\t\t);\r\n\t}\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<table className={`table table-hover`}>\r\n\t\t\t\t<thead>\r\n\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t<th>City</th>\r\n\t\t\t\t\t\t<th>Temperature (°C)</th>\r\n\t\t\t\t\t\t<th>Pressure (hPa)</th>\r\n\t\t\t\t\t\t<th>Humidity (%)</th>\r\n\t\t\t\t\t</tr>\r\n\t\t\t\t</thead>\r\n\t\t\t\t<tbody>{this.props.weather.map(this.renderWeather)}</tbody>\r\n\t\t\t</table>\r\n\t\t);\r\n\t}\r\n}\r\n// function mapStateToProps(state) {\r\n// \t// to match the state in combineReducers\r\n// \treturn { weather: state.weather };\r\n// }\r\n\r\nfunction mapStateToProps({ weather }) {\r\n\treturn { weather };\r\n}\r\n\r\nexport default connect(mapStateToProps)(WeatherList);\r\n","import React, { Component } from 'react';\r\nimport SearchBar from '../containers/search_bar';\r\nimport WeatherList from '../containers/weather_list';\r\nexport default class App extends Component {\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<SearchBar />\r\n\t\t\t\t<WeatherList />\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n","import { combineReducers } from 'redux';\r\nimport WeatherReducer from './reducer_weather';\r\nconst rootReducer = combineReducers({\r\n\tweather: WeatherReducer\r\n});\r\n\r\nexport default rootReducer;\r\n","import { FETCH_WEATHER } from '../actions/index';\r\n\r\n// a reducer returns a piece of a state, it receives an action from the action creator\r\nexport default function(state = [], action) {\r\n\tswitch (action.type) {\r\n\t\tcase FETCH_WEATHER:\r\n\t\t\treturn [action.payload.data, ...state];\r\n\t}\r\n\treturn state;\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { createStore, applyMiddleware } from 'redux';\r\nimport ReduxPromise from 'redux-promise';\r\n\r\nimport App from './components/app';\r\nimport reducers from './reducers';\r\n\r\nimport './App.css';\r\n\r\nconst createStoreWithMiddleware = applyMiddleware(ReduxPromise)(createStore);\r\n\r\nReactDOM.render(\r\n\t<Provider store={createStoreWithMiddleware(reducers)}>\r\n\t\t<App />\r\n\t</Provider>,\r\n\tdocument.querySelector('#root')\r\n);\r\n"],"sourceRoot":""}